$schema: https://json-schema.org/draft/2020-12/schema
$id: https://json-schema.org/implementations/schema
type: array
items:
    $ref: "#/$defs/language"
$comment: |
    The following if/then ensures that if last-updated is used
    anywhere, then it is required everywhere.  This allows it
    to be required in the modern data files and unused in the
    obsolete data files.
if:
   contains:
       required: [implementations]
       properties:
           implementations:
               contains:
                   required: [last-updated]
then:
    properties:
        implementations:
            items:
                required: [last-updated]
$defs:
    language:
        description: |
            A group of implementations grouped by programming language or
            runtime environment.
        type: object
        unevaluatedProperties: false
        required: [name]
        oneOf:
          - required: [implementations]
          - required: [notes]
        properties:
            name:
                type: string
            anchor-name:
                type: string
                description: A name suitable for us as an HTML id.
            implementations:
                description: |
                    The list of implementations for this language/environment,
                    sorted with those supporting the most recent
                    drafts/versions first.
                type: array
                items:
                    $ref: "#/$defs/implementation"
                $comment: |
                    The following if/then ensures that if the first
                if:
                    prefixItems:
                      - required: [last-updated]
                then:
                    items:
                        required: [last-updated]
            notes:
                type: [string, "null"]
    implementation:
        description: |
            An implementation and its associated information.
        type: object
        unevaluatedProperties: false
        required: [name, url]
        anyOf:
          - required: [draft]
          - required: [date-draft]
        properties:
            name:
                description: The human-friendly name of the implementation
                type: string
            url:
                description: |
                    The URL of the implementation's repository or documentation
                type: string
                format: uri
            draft:
                description: The supported drafts (up through draft-07)
                type: array
                items:
                    type: integer
                    enum: [1, 2, 3, 4, 6, 7]
            date-draft:
                description: The supported drafts (2019-09+)
                type: array
                items:
                    type: string
                    enum: [2019-09, 2020-12]
            license:
                description: |
                    The software license under which the implementation
                    is available
                type: string
            notes:
                description: |
                    Additional information.  Overly promotional (or critical)
                    wording should be avoided.
                type: string
            last-updated:
                description: |
                    The date (in whatever timezone was relevant at the time)
                    the information for this entry was last updated.  This
                    should only be changed when the implementation's
                    documentation has been checked against the entry, not
                    when minor formatting or other updates are done.
                $comment: |
                    "pattern" does the validation work here, "format" is
                    just for semantic clarity.
                type: string
                format: date
                pattern: '^\d\d\d\d-[01]\d-[0123]\d$'
